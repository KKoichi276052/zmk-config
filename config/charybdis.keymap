#include "layers.conf"
#include "macros.conf"
#include "combos.conf"
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball_split>;

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 3>;
        };

        scroll {
            layers = <SCROLL>;
            input-processors =
                <&zip_xy_scaler 1 3>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        kp_sl: behavior_kp_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&sl>, <&kp>;
        };

        ht: behavior_hold_tap_key {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings_trigger {
            if-layers = <1 4>;
            then-layer = <6>;
        };
    };

    combos {
        compatible = "zmk,combos";

        KP_Z {
            bindings = <&kp Z>;
            key-positions = <0 1>;
        };

        KP_Q {
            bindings = <&kp Q>;
            key-positions = <1 2>;
        };
    };

    macros {
        Debug_FMT: Debug_FMT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp COLON &kp QMARK &kp RBRC>;
            label = "DEBUG_FMT";
        };

        debug_FMT_pretty: debug_FMT_pretty {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp COLON &kp POUND &kp QMARK &kp RBRC>;
            label = "DEBUG_FMT_PRETTY";
        };

        derive_macro: derive {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp LBKT &kp D &kp E &kp R &kp I &kp V &kp E &kp LPAR &kp RPAR &kp RIGHT_BRACKET &kp LEFT &kp LEFT>;
            label = "DERIVE";
        };

        component_macro: component_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp LBKT &kp C &kp O &kp M &kp P &kp O &kp N &kp E &kp N &kp T &kp RIGHT_BRACKET &kp RETURN>;
            label = "COMPONENT_MACRO";
        };

        lt_eq: lt_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL &kp SPACE>;
            label = "LT_EQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Alpha";
            bindings = <
  &kp J        &kp G        &kp M        &kp P        &kp V              &ht AMPS SEMICOLON  &ht UNDERSCORE PERIOD  &ht ASTERISK SLASH  &ht QUESTION DOUBLE_QUOTES  &ht EXCLAMATION SQT
  &hm LGUI R   &hm LALT S   &hm LSHFT N  &hm LCTRL D  &kp B              &ht MINUS COMMA     &hm RCTRL A            &hm RSHFT E         &hm LALT I                  &hm RGUI H
  &mt LC(Z) X  &mt LC(X) F  &mt LC(C) L  &mt LC(V) C  &kp W              &ht PIPE COLON      &kp U                  &kp O               &kp Y                       &kp K
                            &lt 7 TAB    &lt SYM T    &lt NUMFN ENTER    &lt NAV SPACE       &lt UTIL ESC
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
  &trans           &trans  &trans  &trans       &trans    &trans  &trans    &trans     &trans     &trans
  &kp LC(LS(TAB))  &trans  &trans  &kp LC(TAB)  &trans    &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT
  &trans           &trans  &trans  &trans       &trans    &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END
                           &trans  &trans       &trans    &trans  &trans
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &kp UNDER    &kp CARET  &kp AMPS  &kp STAR  &kp COLON  &kp SEMI
  &kp EQUAL  &kp APOS  &kp DQT   &kp GRAVE  &kp MINUS    &kp BSLH   &kp LPAR  &kp RPAR  &kp LBRC   &kp RBRC
  &kp TILDE  &none     &none     &none      &none        &kp PIPE   &kp LBKT  &kp RBKT  &kp LT     &kp GT
                       &trans    &trans     &trans       &trans     &trans
            >;
        };

        prog_sym_layer {
            display-name = "Prog Sym";
            bindings = <
  &DBL_EQL  &TRPL_EQL  &NOT_EQL       &GT_EQL           &lt_eq               &trans  &LOG_AND   &LOG_OR    &INCLUDE    &trans
  &PRN      &BRC       &BKT           &ANGL             &Debug_FMT           &trans  &ARROW_OP  &ARROW_FN  &DBL_QT     &trans
  &DEC      &INC       &derive_macro  &component_macro  &debug_FMT_pretty    &trans  &LSFT_OP   &RSFT_OP   &UPROPERTY  &UFUNCTION
                       &trans         &trans            &trans               &trans  &trans
            >;
        };

        numfn_layer {
            display-name = "Num/FN";
            bindings = <
  &kp F9  &kp F10  &kp F11  &kp F12  &trans            &kp SLASH  &kp N7  &kp N8  &kp N9  &kp MINUS
  &kp F5  &kp F6   &kp F7   &kp F8   &trans            &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS
  &kp F1  &kp F2   &kp F3   &kp F4   &kp KP_NUMLOCK    &trans     &kp N1  &kp N2  &kp N3  &kp EQUAL
                   &trans   &trans   &trans            &kp N0     &trans
            >;
        };

        util_layer {
            display-name = "Util";
            bindings = <
  &trans  &trans         &kp KP_NUMLOCK  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans         &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &kp LG(LS(S))  &kp DEL         &trans  &trans    &trans  &trans  &trans  &trans  &trans
                         &trans          &trans  &trans    &trans  &trans
            >;
        };

        settings_layer {
            display-name = "Settings";
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4      &trans  &trans  &kp K_SLEEP  &kp C_SLEEP_MODE  &kp C_SLEEP
  &bootloader   &sys_reset    &studio_unlock  &trans        &bt BT_CLR_ALL    &trans  &trans  &trans       &trans            &trans
  &trans        &trans        &trans          &trans        &bt BT_CLR        &trans  &trans  &trans       &trans            &soft_off
                              &trans          &trans        &trans            &trans  &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            bindings = <
  &trans    &trans    &mkp MB3  &trans    &trans    &trans  &trans  &trans  &trans  &trans
  &trans    &mkp MB1  &mo 8     &mkp MB2  &trans    &trans  &trans  &trans  &trans  &trans
  &mkp MB4  &mkp MB5  &sl 9     &trans    &trans    &trans  &trans  &trans  &trans  &trans
                      &trans    &trans    &trans    &trans  &trans
            >;
        };

        scroll_layer {
            display-name = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        snipe_layer {
            display-name = "Snipe";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
